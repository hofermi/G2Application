version: "3.2"
services:
  mariadb:
    image: mariadb:10.5.9
    container_name: g2_mariadb
    restart: always
    ports:
      - 3306:3306
    volumes:
      - ~/docker/volumes/mariadb:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: "g2-prototype-pw"

  zookeeper:
    image: wurstmeister/zookeeper:latest
    hostname: zookeeper
    container_name: g2_zookeeper
    restart: always
    ports:
      - "2181:2181"

  # Only this version is compatible to kafka-clients 2.6.0, which is used by this spring version.
  # see https://docs.confluent.io/platform/current/installation/versions-interoperability.html for more informations.
  kafka-0:
    image: wurstmeister/kafka:2.13-2.6.0
    container_name: g2_kafka-0
    restart: always
    ports:
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_BROKER_ID: 500
      # this setting defines the replication factor of the topic used to store the consumers offset
      KAFKA_offsets_topic_replication_factor: 3
      KAFKA_LISTENERS: >-
        INTERNAL://:9092,EXTERNAL://:29092
      KAFKA_ADVERTISED_LISTENERS: >-
        INTERNAL://kafka-0:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: >-
        INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
    depends_on:
      - zookeeper
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - ${KAFKA_DATA}/500:/kafka

  kafka-1:
    image: wurstmeister/kafka:2.13-2.6.0
    container_name: g2_kafka-1
    restart: always
    ports:
      - "29093:29093"
    environment:
      # KAFKA_CREATE_TOPICS: "Topic1:1:3,Topic2:1:1:compact" Topic1, 1 partition, 3 replicas
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_BROKER_ID: 501
      # this setting defines the replication factor of the topic used to store the consumers offset
      KAFKA_offsets_topic_replication_factor: 3
      KAFKA_LISTENERS: >-
        INTERNAL://:9092,EXTERNAL://:29093
      KAFKA_ADVERTISED_LISTENERS: >-
        INTERNAL://kafka-1:9092,EXTERNAL://localhost:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: >-
        INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
    depends_on:
      - zookeeper

  kafka-2:
    image: wurstmeister/kafka:2.13-2.6.0
    container_name: g2_kafka-2
    restart: always
    ports:
      - "29094:29094"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_BROKER_ID: 502
      # this setting defines the replication factor of the topic used to store the consumers offset
      KAFKA_offsets_topic_replication_factor: 3
      KAFKA_LISTENERS: >-
        INTERNAL://:9092,EXTERNAL://:29094
      KAFKA_ADVERTISED_LISTENERS: >-
        INTERNAL://kafka-2:9092,EXTERNAL://localhost:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: >-
        INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
    depends_on:
      - zookeeper

  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.2
    hostname: schema-registry
    container_name: g2_schema-registry
    restart: always
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-0:9092,kafka-1:9092,kafka-2:9092'

#  ksqldb-server:
#    image: confluentinc/cp-ksqldb-server:6.0.2
#    hostname: ksqldb-server
#    container_name: g2_ksqldb-server
#    depends_on:
#      - kafka-0
#      - kafka-1
#      - kafka-2
#      - schema-registry
#    ports:
#      - "8082:8088"
#    environment:
#      KSQL_CONFIG_DIR: "/etc/ksqldb"
#      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksqldb/log4j.properties"
#      KSQL_BOOTSTRAP_SERVERS: "kafka-0:29092,kafka-1:29092,kafka-2:29092"
#      KSQL_HOST_NAME: ksqldb-server
#      KSQL_LISTENERS: "http://0.0.0.0:8088"
#      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
#      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"

  kowl:
    image: quay.io/cloudhut/kowl:v1.3.1
    container_name: g2_kowl
    restart: always
    ports:
      - 9000:8080
    environment:
      KAFKA_BROKERS: >-
        kafka-0:9092,kafka-1:9092,kafka-2:9092
      KAFKA_SCHEMAREGISTRY_URLS: >-
        http://schema-registry:8081
    depends_on:
      - zookeeper
      - kafka-0
      - kafka-1
      - kafka-2
      - schema-registry
